// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"github.com/F0urward/proftwist-backend/config"
	"github.com/F0urward/proftwist-backend/internal/infrastructure/client/vkclient"
	"github.com/F0urward/proftwist-backend/internal/infrastructure/db/mongo"
	"github.com/F0urward/proftwist-backend/internal/infrastructure/db/postgres"
	"github.com/F0urward/proftwist-backend/internal/infrastructure/db/redis"
	"github.com/F0urward/proftwist-backend/internal/server/http"
	"github.com/F0urward/proftwist-backend/internal/server/middleware/auth"
	"github.com/F0urward/proftwist-backend/internal/server/middleware/cors"
	http4 "github.com/F0urward/proftwist-backend/services/auth/delivery/http"
	repository3 "github.com/F0urward/proftwist-backend/services/auth/repository"
	usecase2 "github.com/F0urward/proftwist-backend/services/auth/usecase"
	http3 "github.com/F0urward/proftwist-backend/services/roadmap/delivery/http"
	roadmapRepo "github.com/F0urward/proftwist-backend/services/roadmap/repository"
	"github.com/F0urward/proftwist-backend/services/roadmap/usecase"
	http2 "github.com/F0urward/proftwist-backend/services/roadmapinfo/delivery/http"
	"github.com/F0urward/proftwist-backend/services/roadmapinfo/repository"
	"github.com/F0urward/proftwist-backend/services/roadmapinfo/usecase"
)

// Injectors from wire.go:

func InitializeHttpServer(cfg *config.Config) *http.HttpServer {
	db := postgres.NewDatabase(cfg)
	client := mongo.NewClient(cfg)
	database := mongo.NewDatabase(client, cfg)
	redisClient := redis.NewClient(cfg)

	roadmapRepository := roadmapRepo.NewRoadmapRepository(database)
	roadmapUsecase := roadmap.NewRoadmapUsecase(roadmapRepository)

	roadmapinfoRepository := repository.NewRoadmapInfoRepository(db)
	roadmapinfoUsecase := usecase.NewRoadmapInfoUsecase(roadmapinfoRepository, roadmapRepository, roadmapUsecase)
	handlers := http2.NewRoadmapInfoHandlers(roadmapinfoUsecase)

	roadmapHandlers := http3.NewRoadmapHandlers(roadmapUsecase, roadmapinfoUsecase)

	postgresRepository := repository3.NewAuthPostgresRepository(db)
	redisRepository := repository3.NewAuthRedisRepository(redisClient, cfg)
	vkClient := vkclient.NewVKClient(cfg)
	vkWebapi := repository3.NewVKAuthWebapi(vkClient)
	authUsecase := usecase2.NewAuthUsecase(postgresRepository, redisRepository, vkWebapi, cfg)
	authHandlers := http4.NewAuthHandlers(authUsecase, cfg)

	authMiddleware := auth.NewAuthMiddleware(redisRepository, cfg)
	corsMiddleware := cors.NewCORSMiddleware(cfg)

	httpServer := http.New(cfg, handlers, roadmapHandlers, authHandlers, authMiddleware, corsMiddleware)

	return httpServer
}
